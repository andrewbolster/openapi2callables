[project]
name = "openapi2callables"
dynamic = ["version"]
description = "Experiment in parsing and projecting OpenAPI endpoints into OpenAI/GenericLLM compatible Tools (but should also be generic enough for non-llm directed usage...)"
authors = [
    {name = "Andrew Bolster", email = "andrew.bolster@gmail.com"},
]
license = {text = "MIT"}
readme = {file = "README.md", content-type = "text/markdown"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = "<4.0,>=3.10"
dependencies = [
    "fastapi<1.0.0,>=0.115.8",
    "requests<3.0.0,>=2.32.3",
    "jsonref<2.0.0,>=1.1.0",
    "uvicorn<1.0.0,>=0.34.0",
]
keywords = ["openapi", "fastapi", "api", "llm", "tools"]

[project.urls]
homepage = "https://github.com/andrewbolster/openapi2callables"

[project.scripts]
openapi2callables = "openapi2callables.cli:cli"

[dependency-groups]
dev = [
    "pre-commit<5.0.0,>=4.1.0",
    "pytest>=8.3.4,<9.0.0",
    "ipykernel<7.0.0,>=6.29.5",
    "httpx<1.0.0,>=0.28.1",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "ruff>=0.9.7",
    "sphinx>=8.1.3",
    "sphinx-autodoc-typehints>=3.0.1",
    "sphinx-rtd-theme>=3.0.2",
    "sphinx-autoapi>=3.6.0",
    "myst-parser>=4.0.1",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm]
version = { source = "file", path = "openapi2callables/__init__.py" }

[tool.pdm.build]
includes = ["openapi2callables"]


